services:
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    depends_on:
      - backend
    networks:
      - app-network
    develop:
      watch:
        - path: ../frontend/package.json
          action: rebuild
        - path: ../frontend/package-lock.json
          action: rebuild
        - path: ../frontend
          target: /app
          action: sync

  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - DB_HOST=db
      - DB_USER='postgres'
      - DB_PASSWORD='1234'
      - DB_NAME='evaly'
    env_file:
      - "../backend/.env"
    depends_on:
      - db
    networks:
      - app-network
    develop:
      watch:
        - path: ../backend/package.json
          action: rebuild
        - path: ../backend/package-lock.json
          action: rebuild
        - path: ../backend
          target: /app
          action: sync

  db:
    image: postgres:15
    restart: always
    environment:
      - ACCESS_SECRET='accestoken'
      - REFRESH_SECRET='helloworld'
      - RESET_SECRET='jjsdhjbhsdbhhsdchjvsdhjcshdjcehv'
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - db
    networks:
      - app-network

volumes:
  db-data:
  pgadmin-data:

networks:
  app-network: